buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10_0.1." + getBuildNumber()
group= "com.DrummerMC.ExtraGenerators" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExtraGenerators"

minecraft {
    version = "1.7.10-10.13.0.1188"
    assetDir = "eclipse/assets"
	replace '@VERSION@', version
}

dependencies {

    compile 'com.mod-buildcraft:buildcraft:6.0.17:dev'


}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
			srcDir 'RF_Api/src/main/java'
        }
        resources {
        }
    }
    api {
		java {
		}
    }
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


def getBuildNumber() {
    if ("$System.env.DRONE_BUILD_NUMBER" != "null"){
        return "build."+"$System.env.DRONE_BUILD_NUMBER"
    }
    else if ("$System.env.BUILD_NUMBER" != "null"){
        return "ci."+"$System.env.BUILD_NUMBER"
    }
    return "0"
}